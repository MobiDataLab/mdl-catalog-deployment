name: Reusable Issue Watcher

# Author: @minff
# Issue : n/a
# Desc  : Reusable issue workflow

on:
  workflow_call:
    inputs:
      deployment-repo:
        description: 'Repository for deployment script'
        type: string
        required: false
        default: 'MobiDataLab/mdl-catalog-deployment'
      deployment-repo-ref:
        description: 'Repository git ref for deployment script'
        type: string
        required: false
        default: 'refs/heads/main'
      label-name:
        description: 'Label name of issue to watch'
        type: string
        required: false
        default: 'add-api'
    secrets:
      APP_ID:
        description: 'App Id'
        required: false
      APP_PRIVATE_KEY:
        description: 'App Private Key'
        required: false

jobs:
  show_issue_event:
    name: Show event
    runs-on: ubuntu-latest
    if: ${{ vars.DEBUG == 'true' }}
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - name: show github
        run: |
          echo event action: ${{ toJson(github.event.action) }}
  add_api:
    name: Add API
    runs-on: ubuntu-latest
    if: >
      ${{ (
      contains(github.event.issue.labels.*.name, inputs.label-name)
      && contains(fromJSON('["opened", "reopened", "edited"]'), github.event.action)
      ) || (
      github.event.action == 'labeled'
      && github.event.label.name == inputs.label-name
      ) }}
    env:
      NODE_OPTIONS: --max_old_space_size=8192
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v3
      - name: Checkout deployment repo
        uses: actions/checkout@v3
        if: ${{ inputs.deployment-repo }}
        with:
          repository: ${{ inputs.deployment-repo }}
          ref: ${{ inputs.deployment-repo-ref }}
          path: mdl-catalog-deployment
      - name: Install scripts
        run: npm i --no-optional
        working-directory: mdl-catalog-deployment
      - name: Add API from issue
        run: node $GITHUB_WORKSPACE/mdl-catalog-deployment/scripts/handleGithub.js batchIssue
        working-directory: APIs
      - name: List API
        working-directory: APIs
        run: |
          find .
          if [[ -z $(git status --porcelain .) ]] ; then
            echo "No file changed. Exiting.."
            exit 1
          else
            echo "Files changed:"
            git status --porcelain .
          fi
      - name: Prepare commit ignores
        run: echo 'patch.yaml' >> .gitignore
      - name: Prepare app token
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Commit and Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          title: ${{ github.event.issue.title }}
          body: 'Close #${{ github.event.issue.number }}'
          commit-message: '${{ github.event.issue.title }}'
          branch: add-api/issue-${{ github.event.issue.number }}
          delete-branch: true
          add-paths: APIs
      - name: Enable PR auto merge
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ steps.generate-token.outputs.token }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: rebase
